
version: '3.8'

# Configuração otimizada para produção
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: blumenau-flood-backend-prod
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
    volumes:
      - ./Data:/app/Data:ro
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - flood-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: blumenau-flood-frontend-prod
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - flood-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Watchtower para auto-update (opcional)
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # 24 horas
      - WATCHTOWER_INCLUDE_STOPPED=true
    restart: unless-stopped
    profiles:
      - watchtower

networks:
  flood-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: flood-br0

volumes:
  logs:
    driver: local
